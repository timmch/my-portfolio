{
  "date": "2020-05-13T20:08:58.392Z",
  "thumbnail": "/img/portfolio_thumb.png",
  "tags": [
    "vue"
  ],
  "title": "My portfolio",
  "description": "A meta post about this website.",
  "body": "I started this portfolio to share the projects I've worked on. I wanted its creation to be a learning experience. I took the opportunity to gain experience with JAMstack development.\n\nI learned about [JAMstack](https://jamstack.org/) through the [Syntax Podcast](https://syntax.fm/show/130/the-vuejs-show-scott-teaches-wes) and [Sarah Drasner](https://twitter.com/sarah_edo). The speed and ease of deploying a static site seemed promising.\n\nOn the plus side, I was blown away after generating the site for the first time. Pages loaded in the blink of an eye. I was excited to be able to deploy a robust site statically and avoid needing a dedicated server.\n\nA challenge for this project was processing the implications of statically generated sites. While displaying something dynamic is generally straightforward, with a serverless approach that is not the case. I learned about the [<client-only> component](https://nuxtjs.org/api/components-client-only), which renders the enclosed code on the client rather than upon generating the site.\n\nCheck out the source on [Github](https://github.com/timmch/my-portfolio).\n\n## Technologies & Libraries\n* [NuxtJS](https://nuxtjs.org/) — Scaffolding. Gotchas.\n* [Netlify](https://www.netlifycms.org/) — After managing a wordpress install, I was curious about Headless CMSs. After configuring Netlify I was surprised by how bare-bones it felt. After using it to develop this site I see the value of defining my own collections. Being able to create new fields in git-controlled JSON is powerful.\n* [Tailwind CSS](https://tailwindcss.com/) — I chose Tailwind to experience a new way of thinking about styles. I enjoy Tailwind's approach. It made styling efficient and consistent.\n* [Vuex](https://vuex.vuejs.org/) — I've used Vuex before and setting up a store from scratch helped solidify flux patterns. Having the store in its own file (as is the default with Nuxt) was an improvement over previous projects I'd worked on where the store was inline where the app was generated."
}